name: Run Vitest on Frontend

on:
  pull_request:
    branches:
      - main

jobs:
  # Frontend tests with Vitest
  test-frontend:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Use project's Node.js version

      # Step 3: Clean install dependencies
      - name: Clean install dependencies
        run: |
          cd frontend
          rm -rf node_modules package-lock.json
          npm install
          npm install @rollup/rollup-linux-x64-gnu  # Add this explicitly

      # Step 4: Run Vitest tests for frontend
      - name: Run Vitest tests
        run: |
          cd frontend
          npm run test -- --run  # Add --run flag to run tests once
      
      - name: cypress E2E tests
        run: |
          cd frontend
          npm run build
          npm run preview
          npm run cy:run

  # # Backend tests with pytest (FastAPI)
  # test-backend:
  #   runs-on: ubuntu-latest
  #   needs: test-frontend # This ensures frontend tests complete before backend tests run

  #   env:
  #     SPOONACULAR_API_KEY: ${{ secrets.SPOONACULAR_API_KEY }}

  #   steps:
  #     # Step 1: Checkout the code
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     # Step 2: Set up Python environment
  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.9" # Use your backend Python version

  #     # Step 3: Install backend dependencies
  #     - name: Install backend dependencies
  #       run: |
  #         cd backend
  #         python -m venv venv
  #         source venv/bin/activate
  #         pip install -r requirements.txt
  #         pip install pytest  # Add this line explicitly

  #     # Step 4: Debug Environment
  #     - name: Debug Environment
  #       run: |
  #         cd backend
  #         source venv/bin/activate
  #         echo "API Key presence check (should show as '***'):"
  #         echo "$SPOONACULAR_API_KEY"
  #         echo "Python environment:"
  #         which python
  #         python --version

  #     # Step 5: Run pytest for backend
  #     - name: Run pytest tests
  #       run: |
  #         cd backend
  #         source venv/bin/activate
  #         python -m pytest -v  # Added -v for verbose output
